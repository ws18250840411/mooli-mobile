export { addUnit, range, unitToPx } from './format/unit';
export { formatNumber } from './format/number';
export { createClassName } from './createClassName';
export { isHidden } from './dom/style';
export { raf, cancelRaf } from './format/raf';
export { canUseDOM, areEqualShallow } from './dom/canUseDOM';
export { resetScroll } from './dom/resetScroll';
export { eventStore } from './dom/event';
export { getScroller, getScrollTop, getElementTop } from './dom/scroll';
export { addClass, removeClass, hasClass } from './dom/class';
export { inBrowser, isIOS, isAndroid } from './system';
export { resolveContainer } from './getContainer';
export { renderToContainer } from './renderToContainer';
export { extend } from './extend';
export { clone } from './clone';
export declare function noop(): void;
export declare const getUniqueId: () => string;
export declare const getViewportSize: () => {
    width: number;
    height: number;
};
export declare function isFunction(val: unknown): val is Function;
export declare function isObject(val: unknown): val is Record<any, any>;
export declare function isPromise<T = any>(val: unknown): val is Promise<T>;
export declare function isDate(val: Date): val is Date;
export declare function isNaN(val: number): val is typeof NaN;
export declare function isString(value: any): boolean;
export declare function isBoolean(value: any): boolean;
export declare function isNull(value: any): boolean;
export declare function isUndefined(value: any): boolean;
export declare function isDef<T>(val: T): val is NonNullable<T>;
export declare function isWindow(val: unknown): val is Window;
